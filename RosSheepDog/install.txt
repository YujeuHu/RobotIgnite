We now can work on the RaspBerryPi to have it ready to work with it with ROS. We can divide it into the following steps:

Install Ubuntu Mate in RaspberryPi
  Download the UbuntuMate Version for RaspberryPi. We recommedn the version RaspberryPi ARMv7: DownloadPage
  Burn that image into your microSD card using gnome-disk-utility. To install it just execute this command in your local computer:
    sudo apt-get install gnome-disk-utility
    
Setup Camera in RaspberryPi
  install the following inside RaspberryPi:
    sudo apt-get install libraspberrypi-dev
    sudo pip install picamera
    sudo apt-get install libraspberrypi-dev
    sudo pip install picamera
  Edit the file /boot/config.txt ** so that these two elemenst are **UNcommented:
    start_x=1
    gpu_mem=128
   Reboot the RaspberryPi:
    sudo reboot
    
Install ROS in RaspberryPi
  sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main" > /etc/apt/sources.list.d/ros-latest.list'
  sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116
  sudo apt-get update
  # We dont need the simulation, but need visualization tools
  sudo apt-get install ros-kinetic-desktop
  sudo rosdep init
  rosdep update
  echo "source /opt/ros/kinetic/setup.bash" >> ~/.bashrc 
  source ~/.bashrc
  sudo apt-get install python-rosinstall python-rosinstall-generator python-wstool build-essential
  mkdir -p ~/catkin_ws/src
  cd ~/catkin_ws/
  catkin_make

  sudo apt-get install ros-kinetic-teleop-twist-keyboard
  Please check the offitial instructions in case someting doesnt work: Wiki ROS Instal
Install ROS Related packages for the Camera
  sudo apt-get install ros-kinetic-compressed-image-transport
  sudo apt-get install ros-kinetic-image-common
  sudo apt-get install ros-kinetic-image-view
  cd ~/catkin_ws/src
  git clone https://github.com/dganbold/raspicam_node.git
  cd ~/catkin_ws/
  catkin_make --pkg raspicam_node
  
  Start the camera node:

    cd ~/catkin_ws/
    source devel/setup.bash
    roslaunch raspicam_node camera_module_v2_640x480_30fps.launch
    â€‹
    Execute in WebShell #2

    Start the image publishing calling the corresponding service:

    # View Image
    rosservice call /raspicam_node/start_capture
    
    Execute in WebShell #2

    Vide the images from the camera through two different methods:

    # View Strem
    rosrun image_view image_view image:=/raspicam_node/image_raw
    rosrun rqt_image_view rqt_image_view
